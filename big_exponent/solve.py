from Crypto.Util.number import *
from Crypto.PublicKey import RSA
import gmpy2
n = 0xde508237659bf9ddfea3171e51b7bab7be61ca6fc8842d607030f2b836fb2fe9ad33c4e88d96362a69cebaa0c5e3646447a051ce15e6f81222f37e02655bed041f21ace12c690d50caad1c1a2d429d1b15d85016d51bcd5816c157a20ce517142858f1c8a83d84c5464eb1b4d5dee0fc618924b95769717e10e60ead9341454698360b88c23bee8b5c19e2cb3f81cc8020c236024339ac2d74042b94764ddfd0dce6c1da291d2b28b1875d9e0c35a1883962bc178b697a3713a133729a4510510a48f0cbd8780c7818f25571073b2d3924ae1c67c5be217b6829f4ff6cf3dcbe63195d7ae9bc8618ae2ab4749be54b0db559152d025fb14d136575c0d84afd9d
e = 0x92cbd92005563daed06c4b010fbc53dd98c63711dad7b4712bad8ba6bec38ace7f3ef48e491c88e46f38b4b3c443d6809976838fddaa023724045cf042b21325be66939840068b569a7366cec013ceecfe9d3b63b6817bcfe6d14d72a86992189880aa139237366dd76b197ad130aec9806056e755b6c7ea97c412dc82268cf6cb95b68749778b79e676d8dfea67f79bebf950b118d61aca718e57644462659071c2eef9a75fbf2d6fea2d54b4c658651568a958ee9c2ac1542f0b02a00787af1ecfbcf8b5cac1f2f34215feaf674c55eab4f9d289fcfa098947af3c17e1e1aea3f028ca077ca35b821995301ffde713364d9aac9a3c9ee481a8fcb5d598b6c1
p = 164441167076194048289177549751957300156423005925381420194157446896979106243555923290589933246156646059419620292139416182066883241128056398157417093440471693509548094733904144948446333651229095822135394923077369387260929093126330048595259377887997453551290504742789553131676076615054763462443452200481155814953
q = 170666533814295917828331869425665971317070188692399509223519094595113142671934591620768926038831184472718590967100763812201354170079400637193416916951832726356328597418015817377866563218909418909360207332115160652812930509379249560291922300146725394287083516536936847852702375514055379610743173434893282267733
d = 12943142410604045324963573717399150995389999892438958933300438824584828677265304042959568659708458383668696495604670543369903677147732370774826294074933249
assert(n==p*q)

priv = RSA.construct((n, e, inverse(e, (p - 1) * (q - 1))))
open("priv.pem",'w').write(priv.exportKey('PEM'))
# Date: Mon, 20 Apr 2020 21:27:19 +0200
# From: Bruce Nemo <bruce@sharky.local>
# To: "=?utf-8?Q?sharktopus=40sharky.local?=" <sharktopus@sharky.local>
# Message-ID: <D6A8C620-E70F-4818-A660-F6A77F011F6F@getmailspring.com>
# Subject: TLS
# X-Mailer: Mailspring
# MIME-Version: 1.0
# Content-Type: multipart/alternative; boundary="5e9df797_0_8d650ec7"

# --5e9df797_0_8d650ec7
# Content-Type: text/plain; charset="utf-8"
# Content-Transfer-Encoding: 7bit
# Content-Disposition: inline

# Remember that we should use 65537 as the public exponent, not something too big.

# Here is your flag: shkCTF{Publ1c_3xp_t0o_b1G_6a8eaf56ab89cb}

# --5e9df797_0_8d650ec7
# Content-Type: text/html; charset="utf-8"
# Content-Transfer-Encoding: quoted-printable
# Content-Disposition: inline

# <div>Remember that we should use 65537 as the public exponent, not someth=
# ing too big.</div><br><div>Here is your flag: shkCT=46=7BPubl1c=5F3xp=5Ft=
# 0o=5Fb1G=5F6a8eaf56ab89cb=7D</div><br>
# --5e9df797_0_8d650ec7--

# .
